generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id         String     @id @default(uuid())
  name       String
  email      String     @unique
  password   String
  status     String
  portfolios Portfolio?
  ratings    Rating[]

  @@map("tb_user")
}

model Portfolio {
  id          String @id @default(uuid())
  name        String
  description String
  pageLink    String
  authorId    String @unique
  author      User   @relation(fields: [authorId], references: [id])
  works       Work[]

  @@map("tb_portfolio")
}

model Rating {
  id            String                    @id @default(uuid())
  score         Float
  userId        String
  user          User                      @relation(fields: [userId], references: [id])
  workDetails   WorkForCompetitionDetails @relation(fields: [workDetailsId], references: [id])
  workDetailsId String                    @unique

  @@map("tb_rating")
}

model Competition {
  id           String                      @id @default(uuid())
  name         String
  createdAt    DateTime                    @default(now())
  startsAt     DateTime?
  endsAt       DateTime?
  worksDetails WorkForCompetitionDetails[]

  @@map("tb_competition")
}

model Work {
  id          String    @id @default(uuid())
  name        String
  description String
  githubLink  String?
  portfolioId String
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])

  @@map("tb_work")
}

model WorkForCompetitionDetails {
  id             String      @id @default(uuid())
  totalReviewers Int
  totalScore     Float
  competitionId  String
  competition    Competition @relation(fields: [competitionId], references: [id])
  rating         Rating?

  @@map("tb_work_for_competition_details")
}
